function [data_out, series_msg_length, ifft_array, zeros_to_append,, ] = ofdm_mod(dataIN, P,L, h, BW, TB_size, data_size)
    %L=prefix length




    length_data = length(dataIN);
    length_data_update = length_data;
    
    while rem(length_data_update, rows_sent) ~= 0
        length_data_update = length_data_update + 1;
    end

    zeros_to_append = length_data_update - length_data;
    dataIN = [dataIN ; zeros(zeros_to_append,1)];
    dataIN_array = reshape(dataIN,rows_sent,[]);

    subcarriers = zeros(P,size(dataIN_array,2));
    k = 1;
    for i=1:P
        if subcarrier_mask(i)
            subcarriers(i,:) = dataIN_array(k,:);
            k=k+1;
        end
    end

    

    temp_c = size(subcarriers,2);

    con_subcarriers = flip(conj(subcarriers),1); % conjugated mirrored columns 


    packet = [zeros(1,temp_c);
              subcarriers;
              zeros(1,temp_c);
              con_subcarriers];

    


    
    n = 1* size(packet, 1); % freq-bins = rows of packet*2
    
    
    
    r = size(packet,1); %find rows of ifft_array

    ifft_array = ifft(packet,n,1); %ifft of each column



    cyclic_prefix = ifft_array((r-L+1):r,:); % cyclic prefix
    
    parallel_array = [cyclic_prefix;    % parallel data
                      ifft_array];
    
    
    [r,c] = size(parallel_array);

    len_data_out = r*c;

    data_out = reshape(parallel_array, 1, len_data_out);

    series_msg_length = len_data_out;

end